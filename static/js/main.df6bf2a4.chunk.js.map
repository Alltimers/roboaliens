{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","username","email","id","React","createElement","className","alt","src","concat","class","CardList","robots","cardArray","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","event","searchfield","target","value","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.df6bf2a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({ name, username, email, id,}) => {\r\n\treturn(\r\n\t\t\r\n\t\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5' id='card'>\r\n\t\t\t\t<img alt='robots' src={`https://robohash.org/${id}`}/>\r\n\t\t\t\t <div class=\"card__overlay\">\r\n\t\t\t\t    <div class=\"overlay__text\">\r\n\t\t\t\t        <h2>{name}</h2>\r\n\t\t\t\t\t\t<h5>{name}</h5>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>User: {username}</li>\r\n\t\t\t\t\t\t\t<li>Email: {email}</li>  \r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<h5>{name}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardArray = robots.map((user, i) => {\r\n\t\treturn (\r\n\t\t\t<Card key={i} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name}\r\n\t\t\t\tusername={robots[i].username} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t/>\r\n\t\t);\r\n\t})\r\n\treturn (\r\n\t<div>\r\n      { cardArray }\r\n    </div>\r\n );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './SearchBox.css';\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\t\r\n\t\t\t<input id='round'\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\t\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n// props\r\n// state\r\n// children\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid rgba(12, 202, 196, 0.5)', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError:true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oooops. That's not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport '../components/SearchBox.css';\r\nimport './App.css';\r\n\r\n\r\n// the RULE:\r\n// PROPS are simply things that come out of STATE, so a parent feeds STATE into\r\n// a child component and as soon as the child component receives a 'state', it's a 'property'(PROP)\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({ robots: users }));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield:event.target.value })\r\n}\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\t\treturn !robots.length ? \r\n\t\t<h1 className='tc'>Loading</h1> :\r\n\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1' id='titleMargin'>ROBORAMA</h1>\r\n\t\t\t\t<h5 className='f2' id='alienTitleMargin'>roborama</h5>\r\n\t\t\t\t<SearchBox id='round' searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\t\r\n\t}\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}